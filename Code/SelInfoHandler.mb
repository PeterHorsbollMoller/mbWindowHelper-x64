'*******************************************************************************
'** 	Created By Peter Horsbøll Møller, Pitney Bowes Business Insight
'** 	Program:
'** 	Modul:
'**
'*******************************************************************************

'-------------------------------------
Include "MapBasic.def"
Include "Icons.def"
Include "IMapInfoPro.def"
Include "Menu.def"
'**default constants...
Include "Library\Defaults.def"

'-------------------------------------
Include "Library\CONFIGFILELib.def"
Include "Library\DEBUGLib.def"
Include "Library\ERRORLib.def"
Include "Library\ProgramInfo.def"
Include "Library\RIBBONLib.def"
Include "Library\TABLELib.def"

Include "SelInfoHandler.def"
Include "WindowHelper.Assembly.def"

Dim	msIniFile, msImageFolder, msLastSelectionTable As String,
	mbInfoSelChangedHandlerEnabled, mbShowInfoOnDeselect As Logical,
	mnbtnSelInfoHandlerIdx, mntxtSelInfoNumRowsIdx As Integer
'**********************************************************************************************''
'Created by Peter Horsbøll Møller, Pitney Bowes Software
'Parameters:
'
'**********************************************************************************************''
Sub SELINFOSetControlIndex(ByVal nIndex As Integer)

OnError GoTo ErrorOccured

	mnbtnSelInfoHandlerIdx = nIndex
	Exit Sub
'-------------------------
ErrorOccured:
	Call ERRCreate(Err(), Error$(), "SELINFOSetControlIndex")
	Call ERRShow()

End Sub

'**********************************************************************************************''
'Created by Peter Horsb?ll M?ller, Pitney Bowes Software
'Parameters:
'
'**********************************************************************************************''
Sub SELINFOSetSelInfoNumRowsControlIndex(ByVal nIndex As Integer)

OnError GoTo ErrorOccured

	mntxtSelInfoNumRowsIdx = nIndex
	Exit Sub
'-------------------------
ErrorOccured:
	Call ERRCreate(Err(), Error$(), "SELINFOSetSelInfoNumRowsControlIndex")
	Call ERRShow()

End Sub

'**********************************************************************************************''
'Created by Peter Horsbøll Møller, Pitney Bowes Software
'Parameters:
'
'**********************************************************************************************''
Sub SELINFOSetImageFolder(ByVal sFolder As String)

OnError GoTo ErrorOccured

	msImageFolder = sFolder
	Exit Sub
'-------------------------
ErrorOccured:
	Call ERRCreate(Err(), Error$(), "SELINFOSetImageFolder")
	Call ERRShow()

End Sub

'**********************************************************************************************''
'Created by Peter Horsbøll Møller, Pitney Bowes Software
'Parameters:
'
'**********************************************************************************************''
Sub SELINFOSetConfigFile(ByVal sFile As String)

OnError GoTo ErrorOccured

	msIniFile = sFile
	Exit Sub
'-------------------------
ErrorOccured:
	Call ERRCreate(Err(), Error$(), "SELINFOSetConfigFile")
	Call ERRShow()

End Sub

'**********************************************************************************************''
'Created by Peter Horsbøll Møller, Pitney Bowes Software
'Parameters:
'
'**********************************************************************************************''
Sub SELINFOWriteConfigFile

OnError GoTo ErrorOccured

'	Call CONFIGWriteKey(msIniFile, "INFOSELHANDLER", "LANGUAGE", PRGIGetApplicationLanguageName())
	Call CONFIGWriteKey(msIniFile, "INFOSELHANDLER", "INITIALSTATEISON", Int(mbInfoSelChangedHandlerEnabled))
	Call CONFIGWriteKey(msIniFile, "INFOSELHANDLER", "SHOWINFOONDESELECT", Int(SELINFOGetShowInfoOnDeselect()))

	Exit Sub
'-------------------------
ErrorOccured:
	Call ERRCreate(Err(), Error$(), "SELINFOWriteConfigFile")
	Call ERRShow()

End Sub

'**********************************************************************************************''
'Created by Peter Horsbøll Møller, Pitney Bowes Software
'Parameters:
'
'**********************************************************************************************''
Sub SELINFOReadConfigFile

Dim	sFile, sState, sShowOnDeselect As String

OnError GoTo ErrorOccured

	sFile 	= ApplicationDirectory$() & PathToFileName$(msIniFile)

	sState			= CONFIGReadKey(sFile, "INFOSELHANDLER", "INITIALSTATEISON")
	sShowOnDeselect	= CONFIGReadKey(sFile, "INFOSELHANDLER", "SHOWINFOONDESELECT")

	If FileExists(msIniFile) Then
		sState			= CONFIGReadKey(msIniFile, "INFOSELHANDLER", "INITIALSTATEISON")
		sShowOnDeselect	= CONFIGReadKey(sFile, "INFOSELHANDLER", "SHOWINFOONDESELECT")
	End If

	If sState = "1" Then
		'**The value get's switched by the first call to SELINFOSwitchDisplay
		'**So it must be set to the opposite of what it should be initially
		mbInfoSelChangedHandlerEnabled = FALSE
	Else
		'**The value get's switched by the first call to SELINFOSwitchDisplay
		'**So it must be set to the opposite of what it should be initially
		mbInfoSelChangedHandlerEnabled = TRUE
	End If
	If sShowOnDeselect = "0" Then
		'**Do not update the Info window when a record is deselected
		Call SELINFOSetShowInfoOnDeselect(FALSE)
	Else
		'**Do update the Info window when a record is deselected
		Call SELINFOSetShowInfoOnDeselect(TRUE)
	End If

	Exit Sub
'-------------------------
ErrorOccured:
	Call ERRCreate(Err(), Error$(), "SELINFOReadConfigFile")
	Call ERRShow()

End Sub

'****************************************
'**   Created by Rémi Bizet, Pitney Bowes Software, France
'**	 Modified by Peter Horsbøll Møller, Pitney Bowes Software
'****************************************
Sub SELINFOSelChangedHandler

Dim	nRowID As Integer

OnError GoTo ErrorOccured

	If NumTables() = 0 Then
		msLastSelectionTable = ""
		Call RBNControlSetCaptionIdx(mntxtSelInfoNumRowsIdx, GetResItemStrReplace("STR_SELECTED_RECORDS_X", "0"))
		Exit Sub
	End If

	If SelectionInfo(SEL_INFO_NROWS) = 0 Then
		Call RBNControlSetCaptionIdx(mntxtSelInfoNumRowsIdx, GetResItemStrReplace("STR_SELECTED_RECORDS_X", "0"))
	Else
		Call RBNControlSetCaptionIdx(mntxtSelInfoNumRowsIdx
							, GetResItemStrReplace("STR_SELECTED_RECORDS_X_OF_Y"
									, FormatNumber$(SelectionInfo(SEL_INFO_NROWS))
										& ";" & FormatNumber$(TableInfo(SelectionInfo(SEL_INFO_TABLENAME), TAB_INFO_NROWS))
									)
							)
	End If

 	If mbInfoSelChangedHandlerEnabled Then
 		Call DEBUGPrint("SELINFOSelChangedHandler: Action")

 		Set Handler SelChangedHandler Off

		Do Case CommandInfo(CMD_INFO_SELTYPE)
			Case 1	'one row was added to the selection;
				Call DEBUGPrint("   One row was added to the selection")
				nRowID	= CommandInfo(CMD_INFO_ROWID)
				Set Window WIN_INFO
					Table SelectionInfo(SEL_INFO_TABLENAME) Rec nRowID
			Case 2	'one row was removed from the selection;
				Call DEBUGPrint("   One row was removed from the selection")
				If SELINFOGetShowInfoOnDeselect() Then
'					Call DEBUGPrint("   Number of open tables: " & NumTables())
					If msLastSelectionTable <> "" Then
						If TABIsOpen(msLastSelectionTable) Then
							nRowID	= CommandInfo(CMD_INFO_ROWID)
							Call DEBUGPrint("   Showing Rec " & nRowID & " From table " & msLastSelectionTable)
							Set Window WIN_INFO
								Table msLastSelectionTable Rec nRowID
						Else
							Call DEBUGPrint("   Previous selection base table is no longer open")
							msLastSelectionTable = ""
						End If
					End If
				End If
		End Case

 		Set Handler SelChangedHandler On
'	Else
 '		Call DEBUGPrint("SELINFOSelChangedHandler: No Action")

		If SelectionInfo(SEL_INFO_NROWS) > 0 Then
			msLastSelectionTable =  SelectionInfo(SEL_INFO_TABLENAME)
		End If
 	End If

	Exit Sub
'-------------------------
ErrorOccured:
	Call ERRCreate(Err(), Error$(), "SELINFOSelChangedHandler")
	If NOT ERRGetLatestErrorNo() IN (689, 644) Then
		Call ERRPrint()
	End If
	Resume Next

End Sub

'****************************************
'**   Created by Rémi Bizet, Pitney Bowes Software, France
'**
'****************************************
Sub SELINFOSwitchDisplay

OnError GoTo ErrorOccured

	mbInfoSelChangedHandlerEnabled = (NOT mbInfoSelChangedHandlerEnabled)

	Call RBNControlSelectedIdx(mnbtnSelInfoHandlerIdx, mbInfoSelChangedHandlerEnabled)

	If mbInfoSelChangedHandlerEnabled Then
		Call RBNControlSetToolTipIdx(mnbtnSelInfoHandlerIdx, PRGIGetApplicationName()
								, GetResItemStr("STR_TTIP_ENABLE_INFO_SEL"), "")
		Call RBNControlSetIconsIdx(mnbtnSelInfoHandlerIdx, CONTROL_SIZE_SMALL, ""
								, msImageFolder & "InfoSelHandlerGreen_32x32.png")
	Else
		Call RBNControlSetToolTipIdx(mnbtnSelInfoHandlerIdx, PRGIGetApplicationName()
								, GetResItemStr("STR_TTIP_DISABLE_INFO_SEL"), "")
		Call RBNControlSetIconsIdx(mnbtnSelInfoHandlerIdx, CONTROL_SIZE_SMALL, ""
								, msImageFolder & "InfoSelHandlerRed_32x32.png")
	End If

	Exit Sub
'-------------------------
ErrorOccured:
	Call ERRCreate(Err(), Error$(), "SELINFOSwitchDisplay")
	Call ERRShow()

End Sub

'**********************************************************************************************''
'Created by Peter Horsbøll Møller, Pitney Bowes Software
'Parameters:
'
'**********************************************************************************************''
Sub SELINFOTableClosedHandler(ByVal args as This)

Dim	sTableName As String

OnError GoTo ErrorOccured

	sTableName	= GetTableEventArgsTableAlias(args)
	If sTableName = msLastSelectionTable Then
		msLastSelectionTable = ""
	End If

	Exit Sub
'-------------------------
ErrorOccured:
	Call ERRCreate(Err(), Error$(), "SELINFOTableClosedHandler")
	Call ERRShow()

End Sub

'**********************************************************************************************''
' Property
'**********************************************************************************************''
Sub SELINFOSetShowInfoOnDeselect(ByVal bValue As Logical)

OnError GoTo ErrorOccured

	mbShowInfoOnDeselect = bValue
	Exit Sub
'-------------------------
ErrorOccured:
	Call ERRCreate(Err(), Error$(), "SELINFOSetShowInfoOnDeselect")

End Sub
'**********************************************************************************************''
Function SELINFOGetShowInfoOnDeselect() As Logical

OnError GoTo ErrorOccured

	SELINFOGetShowInfoOnDeselect = mbShowInfoOnDeselect
	Exit Function
'-------------------------
ErrorOccured:
	Call ERRCreate(Err(), Error$(), "SELINFOGetShowInfoOnDeselect")

End Function
