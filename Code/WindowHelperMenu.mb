'*******************************************************************************
'**   Created by Peter Horsbøll Møller, Pitney Bowes MapInfo
'** 	Program:
'** 	Modul:
'**
'*******************************************************************************
' 1.2.0  	21-08-2009 19:50:48 - Support for moving windows into the active area of Pro
' 1.2.1  	31-08-2009 13:37:22 - Checking if a window is valid before applying the settings
' 1.3.0	09-10-2009 14:52:29 - Moved strings into .NET Resource file
' 1.3.1	28-10-2009 09:43:46	- Support for multiple screen resolutions when storing window position and sizes
'						- Support for automatically opening the layer control when the application starts
' 1.3.2	06-11-2009 20:16:56	- Better handling a closed MapBasic window: the window is now set and then closed on startup
' 1.3.3	23-11-2009 21:49:56	- Added support for help file
'						- Changed the look of the Aboutbox
'						- Added Alt shortcuts to the menu items
' 1.3.4	25-11-2009 14:18:31	- Changed a few strings
' 1.3.5	25-11-2009 20:18:00	- Added support for cloning any window type
' 1.5.0	13-01-2010 21:13:46	- Now the user can :
'							- specify to store window positions on exit
'							- specify to restore window positions on startup
'							- store window positions manually
'							- restore window positions manually
' 1.5.1	26-01-2010 20:08:07	- Moved strings to .NET Resource
' 1.5.5	31-03-2010 13:46:59	- Working on support for base map size and positions
'		20-04-2010 08:01:57	- Disabled saving of file and workspace (was ther for debug reason) when closing a window
'						- Saving an active window to a workspace without Open Table statements...
'							- usable for Layout templates
'							- the workspace still refers to names of windows
'						- Special windows are no longer locked by the autolock feature
'						- The window name is now put into {} to better handle ","'s in the name
' 1.5.6	19-08-2010 09:01:56	- Now supports dockíng add in MI Pro 10.5
' 1.5.7	24-03-2011 22:26:43	- WindowHelper dialog has been created as a dockable Window
'							- has a treeview with all window types
'							- the treewiew is updated whenever there s a change in the windows in Mi Pro
'							- WinFocusChangedHandler, WinClosedHandler
' 1.5.8	25-03-2011 21:01:01	- WindowHelper dialog has been improved, it is not more stable
'							- the Closed Window tab now shows the windows that has been closed during the current session
'							- they can be restored
' 1.5.9	25-03-2011 22:32:15	- Fixed the startup bug when no windows where open
' 1.5.10	08-04-2011 21:30:22	- You can now make any window (maps, browser and all special windows etc) dockable
'						- The Autolock feature now works in the WindowHelper dialog
'						- The WindowHelper toolbar has been removed as all features have been added to the WindowHelper dialog
'						- Special windows dockable position are stored on close down - but the special windows are not automatically made dockable on startup
' 1.5.11	09-04-2011 23:20:00	- Better management of closing and opening windows
'						- The buttons now reflect which window is selected
'						- If you double click on a closed window it will be restored
' 1.5.12	12-04-2011 22:12:02	- Added missing Tooltips on Lock select window
'						- Added some extra checking on exit to prevent errors
' 1.5.13	13-04-2011 22:23:28	- Been trying to make the docked windows more stable when closed during a session
'						- The special windows will now open (as a normal or docked) when you double click on them in the list
'						- Cleaned up the Win32Window class - added a Window object to the class and moved some functions to the class
'						- The resource strings have been moved from the WinHelper.dll (now obsolete) to the WindowHelper.dll
' 1.5.14	14-04-2011 11:36:45	- Moved the GetScreenSize to the WindowHelper .NET project
' 1.5.15	03-05-2011 11:21:01	- Window names are now updated when the WinFocusChangedHandler is called (only for the window getting into focus)
' 1.5.16	03-05-2011 22:47:43	- If you double click on a window, you can  now change the name and the size fo the window in a new window
' 1.5.16	25-05-2011 14:28:26	- Removed the ability to open the layer control on start as this now is built into Mi Pro (since 10.5)
'						- Remove any menu items refering to base windows
'						- Recompiled the entire project due to an updated ConfigFileLib
'1.15.17	27-05-2011 14:36:42	- Only document windows are now added to the list of current windows
'1.15.18	03-06-2011 21:41:41	- Remove the print statement from the interopHelper.Do method
'-------------------------------------------------------------------------------
'2.0.1	16-06-2012 22:40:20	- Added "Locate file in Explorer" to Layer Control (Layers) and TableList rightclick menus
'						- Added "Open file in Text Editor" to Layer Control (Layers) and TableList rightclick menus
'						- Added "Close Table" to Layer Control rightclick menu (Layers)
'						- Added "Set default view" to Layer Control rightclick menu (Maps)
'						- Added "Set default view" to Layer Control rightclick menu (Layers)
'						- Added "Zoom Entire Map" to Layer Control rightclick menu (Maps)
'						- Redesigned icons for the Window Helper windoe
'						- Added button for "Modify Window" to the Window Helper window
'						- Added OKButton the the Modify Window dialog
'2.0.2	03-08-2012 12:28:10	- Added support for zoom previous, zoon next, zoom first and zoom last to the WindowHelper window
'						- Added rightclick menu item for cloning a layout window
'						- Now the WindowHelper window shows the name of the currently active window
'						- The WindowHelper window now uses the active window when a button is pushed
'2.0.3	07-08-2012 09:39:18	- Initiates correctly if no windows are open
'						- The Zoom Next/Previous now handles the standard Zoom Previous View correctly
'2.0.4	09-08-2012 08:26:19	- Renamed a number of menu items
'2.0.5	10-08-2012 14:30:37	- Made the tooltips visible in the WindowHelper window again
'2.0.6	27-09-2012 10:29:11	- Added a space before the name of the Text Editor in the "Open in Text Editor" menu items
'2.0.7	28-11-2012 12:57:02	- Final version, releasing it now
'							- moved all strings from the c# code into the resources
'							- improved handling of the size of the window after autohide
'2.0.8	06-12-2012 07:47:23	- Added the ability to open Layer Control and TableList windows on startup
'						- Fixed an issue where storing the window positions didn't save the stored positions to the config file
'2.0.9	13-12-2012 08:34:34	- Added missing call to GetResStr around a few strings in the TableHelper module
'2.0.10	30-01-2013 09:00:30	- The Handlers did at certain occasions send a value of 145 which doesn't refer to any windows in Mi Pro.
'						- these low values are now ignored in the Controller module (.NET)
'2.0.11	12-03-2013 20:51:25	- Close table from the Layer Control crashes the tools when used on a thematic layer.
'							Has been changed to handle the cosmmetic layer and a cosmetic layer differently.
'							- Cosmetic layer is ignored.
'							- Thematic layer is removed from the map window
'2.0.12	26-03-2013 10:55:22	- The speed of showing the tooltips in the WindowHelper window has been improved
'						- The Size of the WindowHelper window is now restored correctly if the window is set to 'Autohide'
'						- The assembly miadm.dll has been renamed to miadm10.5.0.202.dll to remove conflicts with a newer version of this file
'						- the unlock window button is now working correctly again
'						- lock, unlock and autolock windows now updates the buttons state as well
'2.1.0	31-01-2014 14:42:24	- Implemented a tool for creating map extents into cosmetic layer or other tables
'
'3.0.0	20-05-2016 10:00:37	- WindowHelper for x64
'						- Removing features for remembering window sizes and positions
'		18-11-2016 12:10:31	- Creating Map Extents placed on MAP tab in the Options group
'						- Adding InfoSelHandler functionality
'						- Added Advanced Rename Layer functionality, Layer Control Layer context menu
'						- Added Query using Value from selected cell, Browser Context menu and Filter dropdown button
'						- Added Info Tool and Ruler Tool to the Map Mini Toolbar
'3.0.1	18-11-2016 12:10:39	- Fixed tooltip issue with the InfoSelHandler tool
'						- Added Restore Closed Windows (the MapBasic version)
'						- Added Select Within Map Extent
'3.0.2	29-11-2016 21:27:19	- Added Options dialog
'		31-01-2017 11:49:51	- Added Rename Multiple Layers, Layer Control Map context menu
'3.0.2	15-03-2017 14:05:20 - Changed the Aboutbox for ProgramInfo to link to Community Download
'						- Made the icons in the MAP > Options group small
'						- Created a new document for the tool
'3.5.0	10-04-2018 21:48:11	- Added a menu item for cloning a map window via the Layer Control Map Context menu
'						- Added an option for creating a theme from a table/column using the current style from the objects.
'3.5.1	25-04-2018 08:25:59	- Added a function to return Cartographic Scale of a Map window (to be used in a SmartText)
'						- Added a function to return Coordinates from a Map window (to be used in a SmartText)
'3.5.2	09-05-2018 12:18:26	- Added a dialog to show a list of functions that can be used via the new Exec() function
'						- Added Browse in floating window to TABLE tab, including Ctrl+Shift+F4 shortcut
'						- Added Browse in floating window to Table List Table Context menu
'						- Fixed issue: InfoSelHandler State wasn't saved correctly
'3.5.3	18-05-2018 12:37:31	- Fixed ToolTip for Floating Browser window
'3.5.4	22-06-2018 15:07:45	- Added a text showing the number of selected records in the Statusbar
'3.5.5	26-06-2018 10:05:54	- Adding Info and Ruler to Map Mini Toolbar is being ignored for MapInfo Pro 17.0 and newer
'3.5.6	09-08-2018 13:40:44	- Number of selected records now also shows the total number of records in the table
'3.5.7	06-09-2018 10:33:56 - Added Browser Context Menu item to group a table based on the current column
'						- Fixed an issue with "Map Extent Selection" which made the tool not appear
'						- Added icon for "Map Extent Selection"
'*******************************************************************************

'-------------------------------------
Include "MapBasic.def"
Include "Enums.def"
Include "Icons.def"
Include "Menu.def"
'**default constants...
Include "Library\Defaults.def"
Include "Library\MI_ICONS_X64.def"

Define xProgram 		"WindowHelper"
Define xProgramMenu		"W&indowHelper"
Define xToolbarName		"WindowHelper"
Define xVersion 		"3.5.7"
Define xYear			"2018"
Define xAddToMenuBar	FALSE

Define FILE_INI			GetFolderPath$(FOLDER_MI_PREFERENCE) & xProgram & ".ini"
Define FILE_DBG			ApplicationDirectory$() & xProgram & ".dbg"
'Define FILE_ICONS_DLL		ApplicationDirectory$() + "WinHelperIcons.DLL"
'Define FILE_PAD			GetFolderPath$(FOLDER_MI_PREFERENCE) & xProgram & ".btp"
Define FILE_HLP			ApplicationDirectory$() + "WindowHelper.pdf"
Define PATH_IMAGES			ApplicationDirectory$() & "Images\"

Declare Sub MENUSaveWindowToWorkspace

'-------------------------------------
Include "Library\DEBUGLib.def"
Include "Library\CONFIGFILELib.def"
Include "Library\ERRORLib.def"
Include "Library\FILELib.def"
Include "Library\MAPPERLib.def"
Include "Library\ProgramInfo.def"
Include "Library\RibbonElements.def"
Include "Library\RESSTRNGLib.def"
Include "Library\RIBBONLib.def"
Include "Library\STRINGLib.def"
Include "Library\SYSTEMLib.def"
Include "Library\TABLELib.def"
Include "Library\TOOLBARLib.def"

Include "DLGWHOWindowHelperOptions.def"
'Include "BaseWindows.def"
Include "MapHelper.def"
Include "TableHelper.def"
Include "WindowHelper.def"
'Include "WindowPosition.def"
'Include "WindowShow.def"
'Include "WindowHelperDialog.def"
Include "MAPEXTCreate.def"
Include "DLGExecFunctions.def"

Include "WindowHelper.Assembly.def"
Include "SelInfoHandler.def"

'-----------------------------------------------------------------------------------------
Declare Sub Main
Declare Sub MENUBuildRibbonInterface

Declare Sub EndProgram
Declare Sub MENUGoToCommunityDownloads

Declare Sub Endhandler
Declare Sub WinClosedHandler
Declare Sub WinFocusChangedHandler
Declare Sub WinChangedHandler
Declare Sub SelChangedHandler

Declare Sub MENUInitializeMenuItems

Declare Sub MENUReadIniFile
Declare Sub MENUWriteIniFile

Declare Sub MENUOptions

Declare Sub MENUFilterBrowserCurrentCell
Declare Sub MENUGroupByCurrentColumn

Dim	mbIgnoreTopLeftCell As Logical

'**********************************************************************************************''
'**   Created by Peter Horsbøll Møller, Pitney Bowes MapInfo
'
'**********************************************************************************************''
Sub Main

Dim	sToolbar, sTextEditorExe, sTextEditor As String,
	mapinfoApplication As This

OnError GoTo ErrorOccured

	If NOT SystemInfo(SYS_INFO_MAPINFO_INTERFACE) = MIINTERFACE_RIBBON Then
		Note "This application is designed for a 64 bit version of MapInfo Pro. The application will close now!"
		End Program
	End If

	'***Initializing ApplicationInfo
	Call PRGISetApplicationName(xProgram)
	Call PRGISetApplicationVersion(xVersion)
	Call PRGISetApplicationCopyrightYear(xYear)
	Call PRGISetApplicationHelpFile(FILE_HLP)
	Call PRGISetApplicationImageUri(PATH_IMAGES & "MapWindowAutoLock_32x32.png")
	Call PRGISetApplicationDevelopedBy("Peter Horsbøll Møller")
	Call PRGISetDescription(GetResItemStr("STR_APPLICATION_DESCRIPTION"))

	'***Enabling Debug if file exists
	Call DEBUGEnableByFile(FILE_DBG)
	Call DEBUGPrint("----------------------------------------------------------------------------------------------")
	Call DEBUGPrint("Application " & PRGIGetApplicationName() & " " & xVersion & " started")

	Call RESSTRNGSetStringFilesFolder(ApplicationDirectory$())
'	Call RESSTRNGSetStringFilesFolder(ApplicationDirectory$() & "Strings\")
'	Call PRGILoadLanguageStrings(msLanguage)

'	If FileExists(FILE_HLP & " " & msLanguage & ".PDF") Then
'		Call PRGISetApplicationHelpFile(FILE_HLP & " " & msLanguage & ".PDF")
'	Else
'		Call PRGISetApplicationHelpFile(FILE_HLP & ".PDF")
'	End If

	'***Initializing BaseWindows module
'	Call BWINSetIniFile(FILE_INI)
	Call MAPEXTSetIniFile(FILE_INI)
	Call SELINFOSetConfigFile(FILE_INI)
	Call WINHSetConfigFile(FILE_INI)

	Call SELINFOSetImageFolder(PATH_IMAGES)
	Call WINHSetImageFolder(PATH_IMAGES)

	'***Reading configuration file
	Call MENUReadIniFile

	Call MENUBuildRibbonInterface

	'**Adding menu item to the Mapper window rightclick menu
'	Alter Menu ID M_SHORTCUT_MAPPER add
'		GetResItemStr("MNU_CREATE_MAP_EXTENT")
'			HelpMsg GetResItemStr("MNU_HLP_CREATE_MAP_EXTENT")
'			Calling MAPEXTCreateMenu

	'**Adding menu item to the LayerControl window rightclick menu for maps
'	Alter Menu ID M_SHORTCUT_LC_MAPS Add
'		"(-",
'		GetResItemStr("MNU_SET_DEFAULT_VIEW_ALL_LAYERS")
'			HelpMsg GetResItemStr("MNU_HLP_SET_DEFAULT_VIEW_ALL_LAYERS")
'			Calling WINHSetDefaultViewAllLayers,
'		GetResItemStr("MNU_VIEW_ENTIRE_MAP")					'"Zoom Entire Map"
'			HelpMsg GetResItemStr("MNU_HLP_VIEW_ENTIRE_MAP")		'"Zooms to entire view in the map"
'			Calling WINHZoomEntireAllLayers

	'**Adding menu item to the TableList window rightclick menu for tables
'	Alter Menu ID M_SHORTCUT_TLV_TABLES Add
'		"(-",
'		GetResItemStr("MNU_LOCATE_FILE_IN_EXPLORER")					'"Locate file in Explorer"
'			HelpMsg GetResItemStr("MNU_HLP_LOCATE_FILE_IN_EXPLORER")	'"Finds a file in Windows Explorer related to the selected table"
'			Calling TABHLocateTabFileTL

	'**Adding menu item to the LayerControl window rightclick menu for layers
'	Alter Menu ID M_SHORTCUT_LC_LAYERS Add
'		"(-",
'		GetResItemStr("MNU_CLOSE_TABLE")	'"Close table"
'			HelpMsg GetResItemStr("MNU_HLP_CLOSE_TABLE")	'"Closes the selected table"
'			Calling TABHCloseTableLC,
'		"(-",
'		GetResItemStr("MNU_SET_DEFAULT_VIEW_SINGLE_LAYER")
'			HelpMsg GetResItemStr("MNU_HLP_SET_DEFAULT_VIEW_SINGLE_LAYER")
'			Calling WINHSetDefaultViewSingleLayer,
'		GetResItemStr("MNU_LOCATE_FILE_IN_EXPLORER")		'"Locate file in Explorer"
'			HelpMsg GetResItemStr("MNU_HLP_LOCATE_FILE_IN_EXPLORER")	'"Finds a file in Windows Explorer related to the selected layer"
'			Calling TABHLocateTabFileLC

'	sTextEditorExe	= SYSFindTextEditor()
'	If sTextEditorExe <> "" Then
'		sTextEditor 	= PathToFileName$(sTextEditorExe)
'		sTextEditor 	= Left$(sTextEditor, Len(sTextEditor) - 4)

'		Call TABHSetTextEditor(sTextEditorExe)

'		'**Adding menu item to the TableList window rightclick menu for tables
'		Alter Menu ID M_SHORTCUT_TLV_TABLES Add
'			GetResItemStr("MNU_OPEN_TABFILE_IN_TEXT_EDITOR") & " " & sTextEditor					'"Open tab file in " + sTextEditor
'				HelpMsg GetResItemStr("MNU_HLP_OPEN_TABFILE_IN_TEXT_EDITOR") & " " & sTextEditor	'"Open the selected tab file in " + sTextEditor
'				Calling TABHOpenTabFileTL

'		'**Adding menu item to the LayerControl window rightclick menu for layers
'		Alter Menu ID M_SHORTCUT_LC_LAYERS Add
'			GetResItemStr("MNU_OPEN_TABFILE_IN_TEXT_EDITOR") & " " & sTextEditor					'"Open tab file in " + sTextEditor
'				HelpMsg GetResItemStr("MNU_HLP_OPEN_TABFILE_IN_TEXT_EDITOR") & " " & sTextEditor	'"Open the selected tab file in " + sTextEditor
'				Calling TABHOpenTabFileLC
'	End If

	'**Disabling restoring windows until a window has been closed
'	Alter Menu Item WINHRestoreWindowMenu Disable
'	Alter Button WINHRestoreWindowMenu Disable

'	Call MENUInitializeMenuItems

'	Call WHDInitialize

	Call SELINFOSwitchDisplay

'	Call DLGExecFunctions

	If NOT RBNEventSubscribe(AddInEvents_TableClosed, "SELINFOTableClosedHandler") Then
		Call DEBUGPrint("SELINFOTableClosedHandler was not subscribed!")
	End If

	Exit Sub
'-------------------------
ErrorOccured:
	Call ERRCreate(Err(), Error$(), "Main")
	Call ERRShow()
	Resume Next

End Sub

'**********************************************************************************************''
'Created by Peter Horsbøll Møller, Pitney Bowes Software
'Parameters:
'
'**********************************************************************************************''
Sub MENUBuildRibbonInterface

Dim	nCtrlIdx As Integer,
	sTabName, sGroupName, sSplitButtonName, sSplitButtonGroupName As String,
	sTextEditorExe, sTextEditor As String

OnError GoTo ErrorOccured

	'***************************************************************
	'M A P    M I N I    T O O L B A R
	'***************************************************************
	If SystemInfo(SYS_INFO_MIVERSION) < 1700 Then
		If DLGWHOGetAddInfoToolToMTB() OR DLGWHOGetAddRulerToolToMTB() Then
			nCtrlIdx = RBNMapMTBInsertStackPanelAfter("stpWindowHelper", "Info", "MapTools2")
			If nCtrlIdx > 0 Then
				Call RBNControlSetLeftMarginIdx(nCtrlIdx, 0)

				If DLGWHOGetAddInfoToolToMTB() Then
					nCtrlIdx	= RBNMapMTBStackPanelAddControl("stptbtInfoTool", "", ""
												, ControlType_ToolButton, "stpWindowHelper")
					If nCtrlIdx > 0 Then
						'Create & Set the button tooltip
						Call RBNControlSetToolTipIdx(nCtrlIdx, PRGIGetApplicationName()
												, GetResItemStr("STR_TTIP_INFO_TOOL"), "")
						'Set the button icon
						Call RBNControlSetIconsIdx(nCtrlIdx, CONTROL_SIZE_SMALL
												, MI_IMG_MAP_INFOTOOL_16, "")
						'**Set the handler to match the handler of the first button
						Call RBNControlSetCmdIDIdx(nCtrlIdx, 1707)
					End If
				End If

				If DLGWHOGetAddRulerToolToMTB() Then
					nCtrlIdx	= RBNMapMTBStackPanelAddControl("stptbtRuler", "", ""
												, ControlType_ToolButton, "stpWindowHelper")
					If nCtrlIdx > 0 Then
						'Create & Set the button tooltip
						Call RBNControlSetToolTipIdx(nCtrlIdx, PRGIGetApplicationName()
												, GetResItemStr("STR_TTIP_RULER_TOOL"), "")
						'Set the button icon
						Call RBNControlSetIconsIdx(nCtrlIdx, CONTROL_SIZE_SMALL
												, MI_IMG_WIN_RULER_16, "")
						'**Set the handler to match the handler of the first button
						Call RBNControlSetCmdIDIdx(nCtrlIdx, 1710)
					End If
				End If
			End If
		End If
	End If

	'********************************************************************************
	'A D D I N G    C O N T R O L S    T O    T H E    R I B B O N    -    M A P
	'********************************************************************************
	sTabName		= TAB_MAP
	sGroupName	= TAB_GROUP_MAP_OPTIONS

	nCtrlIdx = RBNGroupAddButton("btnMapMapExtent", GetResItemStr("MNU_CREATE_MAP_EXTENT"), "", sTabName, sGroupName)
	If nCtrlIdx > 0 Then
		'Create & Set the button tooltip
		Call RBNControlSetToolTipIdx(nCtrlIdx, PRGIGetApplicationName(), GetResItemStr("MNU_HLP_CREATE_MAP_EXTENT"), "")
		'Set the button icon
		Call RBNControlSetIconsIdx(nCtrlIdx, CONTROL_SIZE_SMALL, "", PATH_IMAGES & "MapWindowExtent_32x32.png")
		'Set Custom MapBasic Handle to the button
		Call RBNControlSetCustomMBXHandlerIdx(nCtrlIdx, "MAPEXTCreateMenu")
	End If

	'I N F O S E L C H A N G E D    H A N D L E R
	'**Adding to the Ribbon, MAP Tab
	nCtrlIdx	= RBNGroupAddButton("btnSelInfoHandler", GetResItemStr("STR_BTN_SEL_INFO_HANDLER"), "", sTabName, sGroupName)
	If nCtrlIdx > 0 Then
		Call SELINFOSetControlIndex(nCtrlIdx)
		'Specify that this is a toggle button
		Call RBNControlToggleIdx(nCtrlIdx, TRUE)
		'Create & Set the button tooltip
		Call RBNControlSetToolTipIdx(nCtrlIdx, PRGIGetApplicationName(), GetResItemStr("STR_TTIP_ENABLE_INFO_SEL"), "")
		'Set the button icon
		Call RBNControlSetIconsIdx(nCtrlIdx, CONTROL_SIZE_SMALL, "", PATH_IMAGES & "InfoSelHandler_32x32.png")
		'**Set the handler to match the handler of the first button
		Call RBNControlSetCustomMBXHandlerIdx(nCtrlIdx, "SELINFOSwitchDisplay")
	End If

	nCtrlIdx = RBNGroupAddButton("btnMapRestoreClosedWindows", GetResItemStr("MNU_RESTORE_CLOSED_WINDOWS"), "", sTabName, sGroupName)
	If nCtrlIdx > 0 Then
		'Create & Set the button tooltip
		Call RBNControlSetToolTipIdx(nCtrlIdx, PRGIGetApplicationName(), GetResItemStr("TTIP_RESTORE_CLOSED_WINDOWS"), "")
		'Set the button icon
		Call RBNControlSetIconsIdx(nCtrlIdx, CONTROL_SIZE_SMALL, "", PATH_IMAGES & "WindowRestore_32x32.png")
		'Set Custom MapBasic Handle to the button
		Call RBNControlSetCustomMBXHandlerIdx(nCtrlIdx, "WINHRestoreWindowMenu")
	End If

	sTabName		= TAB_MAP
	sGroupName	= TAB_GROUP_MAP_FILE

	nCtrlIdx = RBNGroupInsertControlAfter("btnMapStaticTheme", GetResItemStr("MNU_STATIC_THEME"), "", ControlType_Button, sTabName, sGroupName, "MapAddThematicButton")
	If nCtrlIdx > 0 Then
		'Create & Set the button tooltip
		Call RBNControlSetToolTipIdx(nCtrlIdx, PRGIGetApplicationName(), GetResItemStr("TTIP_STATIC_THEME"), "")
		'Set the button icon
		Call RBNControlSetIconsIdx(nCtrlIdx, CONTROL_SIZE_LARGE, MI_IMG_MAP_ADDTHEME_16, MI_IMG_MAP_ADDTHEME_32)
		'Set Custom MapBasic Handle to the button
		Call RBNControlSetCustomMBXHandlerIdx(nCtrlIdx, "MAPHMenuThemeUsingCurrentStyles")
	End If

	sTabName		= TAB_MAP
	sGroupName	= TAB_GROUP_MAP_SELECTION

	nCtrlIdx = RBNSplitButtonGroupAddControl("btnMapSelectWithinMap", GetResItemStr("MNU_SELECT_WITHIN_MAP"), "", ControlType_Button, sTabName, sGroupName, "MapSelectionToolsSplitButton", "SelectionDownMenuGroup")
	If nCtrlIdx > 0 Then
		'Create & Set the button tooltip
		Call RBNControlSetToolTipIdx(nCtrlIdx, PRGIGetApplicationName(), GetResItemStr("TTIP_SELECT_WITHIN_MAP"), "")
		'Set the button icon
		Call RBNControlSetIconsIdx(nCtrlIdx, CONTROL_SIZE_LARGE, "", PATH_IMAGES & "SelectWithinMap_32x32.png")
		'Set Custom MapBasic Handle to the button
		Call RBNControlSetLeftMarginIdx(nCtrlIdx, 0.0)
		Call RBNControlSetCustomMBXHandlerIdx(nCtrlIdx, "MAPHSelectWithinMap")
	End If

'	nCtrlIdx = RBNGroupAddButton("MapAutolockWindows", GetResItemStr("MNU_AUTOLOCK_WINDOWS"), "", sTabName, sGroupName)
'	If nCtrlIdx > 0 Then
'		'Create & Set the button tooltip
'		Call RBNControlSetToolTipIdx(nCtrlIdx, PRGIGetApplicationName(), GetResItemStr("TTIP_AUTOLOCK_WINDOWS_OFF"), "")
'		'Set the button icon
'		Call RBNControlSetIconsIdx(nCtrlIdx, CONTROL_SIZE_SMALL, PATH_IMAGES & "WindowAutoLockOff_16x16.png", PATH_IMAGES & "WindowAutoLockOff_32x32.png")
'		'Set Custom MapBasic Handle to the button
'		Call RBNControlSetCustomMBXHandlerIdx(nCtrlIdx, "WINHAutoLockWindowSwitchMenu")
'		Call WINHSetAutoLockWindowsIndex(nCtrlIdx)
'	End If
'	nCtrlIdx = RBNGroupAddButton("MapLockWindow", GetResItemStr("MNU_LOCK_WINDOW"), "", sTabName, sGroupName)
'	If nCtrlIdx > 0 Then
'		'Create & Set the button tooltip
'		Call RBNControlSetToolTipIdx(nCtrlIdx, PRGIGetApplicationName(), GetResItemStr("TTIP_LOCK_WINDOW"), "")
'		'Set the button icon
'		Call RBNControlSetIconsIdx(nCtrlIdx, CONTROL_SIZE_SMALL, PATH_IMAGES & "WindowLock_16x16.png", PATH_IMAGES & "WindowLock_32x32.png")
'		'Set Custom MapBasic Handle to the button
'		Call RBNControlSetCustomMBXHandlerIdx(nCtrlIdx, "WINHLockWindowMenu")
'	End If
'	nCtrlIdx = RBNGroupAddButton("MapUnlockWindow", GetResItemStr("MNU_UNLOCK_WINDOW"), "", sTabName, sGroupName)
'	If nCtrlIdx > 0 Then
'		'Create & Set the button tooltip
'		Call RBNControlSetToolTipIdx(nCtrlIdx, PRGIGetApplicationName(), GetResItemStr("TTIP_UNLOCK_WINDOW"), "")
'		'Set the button icon
'		Call RBNControlSetIconsIdx(nCtrlIdx, CONTROL_SIZE_SMALL, PATH_IMAGES & "WindowUnlock_16x16.png", PATH_IMAGES & "WindowUnlock_32x32.png")
'		'Set Custom MapBasic Handle to the button
'		Call RBNControlSetCustomMBXHandlerIdx(nCtrlIdx, "WINHUnlockWindowMenu")
'	End If

	'Z O O M    N E X T    A N D    P R E V I O U S
'	sTabName				= TAB_MAP
'	sGroupName			= TAB_GROUP_MAP_NAVIGATE
'	nCtrlIdx = RBNGroupAddButton("MENUZoomFirstExtent", GetResItemStr("MNU_HLP_ZOOM_TO_FIRST"), "", sTabName, sGroupName)
'	If nCtrlIdx > 0 Then
'		'Create & Set the button tooltip
'		Call RBNControlSetToolTipIdx(nCtrlIdx, PRGIGetApplicationName(), "Initial View", "")
'		'Set the button icon
'		Call RBNControlSetIconsIdx(nCtrlIdx, CONTROL_SIZE_SMALL, PATH_IMAGES & "MapWindowZoomFirst_16x16.png", "")
'		'Set Custom MapBasic Handle to the button
'		Call RBNControlSetCustomMBXHandlerIdx(nCtrlIdx, "WINHZoomFirstMapExtent")
'	End If
'	nCtrlIdx = RBNGroupAddButton("MENUZoomFirstPrevios", "Previous", "", sTabName, sGroupName)
'	If nCtrlIdx > 0 Then
'		'Create & Set the button tooltip
'		Call RBNControlSetToolTipIdx(nCtrlIdx, PRGIGetApplicationName(), GetResItemStr("MNU_HLP_ZOOM_TO_PREVIOUS"), "")
'		'Set the button icon
'		Call RBNControlSetIconsIdx(nCtrlIdx, CONTROL_SIZE_SMALL, PATH_IMAGES & "MapWindowZoomPrev_16x16.png", "")
'		'Set Custom MapBasic Handle to the button
'		Call RBNControlSetCustomMBXHandlerIdx(nCtrlIdx, "WINHZoomPreviousMapExtent")
'	End If
'	nCtrlIdx = RBNGroupAddButton("MENUZoomFirstPrevios", "Next", "", sTabName, sGroupName)
'	If nCtrlIdx > 0 Then
'		'Create & Set the button tooltip
'		Call RBNControlSetToolTipIdx(nCtrlIdx, PRGIGetApplicationName(), GetResItemStr("MNU_HLP_ZOOM_TO_NEXT"), "")
'		'Set the button icon
'		Call RBNControlSetIconsIdx(nCtrlIdx, CONTROL_SIZE_SMALL, PATH_IMAGES & "MapWindowZoomNext_16x16.png", "")
'		'Set Custom MapBasic Handle to the button
'		Call RBNControlSetCustomMBXHandlerIdx(nCtrlIdx, "WINHZoomNextMapExtent")
'	End If


	'********************************************************************************
	'A D D I N G    C O N T R O L S    T O    T H E    R I B B O N    -    H O M E
	'********************************************************************************
	sTabName				= TAB_HOME
	sGroupName			= TAB_GROUP_HOME_RECOVER_WINDOWS

	nCtrlIdx = RBNGroupAddButton("HomeRestoreClosedWindows", GetResItemStr("MNU_RESTORE_CLOSED_WINDOWS"), "", sTabName, sGroupName)
	If nCtrlIdx > 0 Then
		'Create & Set the button tooltip
		Call RBNControlSetToolTipIdx(nCtrlIdx, PRGIGetApplicationName(), GetResItemStr("TTIP_RESTORE_CLOSED_WINDOWS"), "")
		'Set the button icon
		Call RBNControlSetIconsIdx(nCtrlIdx, CONTROL_SIZE_LARGE, PATH_IMAGES & "WindowRestore_16x16.png", PATH_IMAGES & "WindowRestore_32x32.png")
		'Set Custom MapBasic Handle to the button
		Call RBNControlSetCustomMBXHandlerIdx(nCtrlIdx, "WINHRestoreWindowMenu")
	End If

'	nCtrlIdx = RBNGroupAddButton("HomeAutolockWindows", GetResItemStr("MNU_AUTOLOCK_WINDOWS"), "", sTabName, sGroupName)
'	If nCtrlIdx > 0 Then
'		'Create & Set the button tooltip
'		Call RBNControlSetToolTipIdx(nCtrlIdx, PRGIGetApplicationName(), GetResItemStr("TTIP_AUTOLOCK_WINDOWS_OFF"), "")
'		'Set the button icon
'		Call RBNControlSetIconsIdx(nCtrlIdx, CONTROL_SIZE_SMALL, PATH_IMAGES & "WindowAutoLockOff_16x16.png", PATH_IMAGES & "WindowAutoLockOff_32x32.png")
'		'Set Custom MapBasic Handle to the button
'		Call RBNControlSetCustomMBXHandlerIdx(nCtrlIdx, "WINHAutoLockWindowSwitchMenu")
'		Call WINHSetAutoLockWindowsIndex(nCtrlIdx)
'	End If
'	nCtrlIdx = RBNGroupAddButton("HomeLockWindow", GetResItemStr("MNU_LOCK_WINDOW"), "", sTabName, sGroupName)
'	If nCtrlIdx > 0 Then
'		'Create & Set the button tooltip
'		Call RBNControlSetToolTipIdx(nCtrlIdx, PRGIGetApplicationName(), GetResItemStr("TTIP_LOCK_WINDOW"), "")
'		'Set the button icon
'		Call RBNControlSetIconsIdx(nCtrlIdx, CONTROL_SIZE_SMALL, PATH_IMAGES & "WindowLock_16x16.png", PATH_IMAGES & "WindowLock_32x32.png")
'		'Set Custom MapBasic Handle to the button
'		Call RBNControlSetCustomMBXHandlerIdx(nCtrlIdx, "WINHLockWindowMenu")
'	End If
'	nCtrlIdx = RBNGroupAddButton("HomeUnlockWindow", GetResItemStr("MNU_UNLOCK_WINDOW"), "", sTabName, sGroupName)
'	If nCtrlIdx > 0 Then
'		'Create & Set the button tooltip
'		Call RBNControlSetToolTipIdx(nCtrlIdx, PRGIGetApplicationName(), GetResItemStr("TTIP_UNLOCK_WINDOW"), "")
'		'Set the button icon
'		Call RBNControlSetIconsIdx(nCtrlIdx, CONTROL_SIZE_SMALL, PATH_IMAGES & "WindowUnlock_16x16.png", PATH_IMAGES & "WindowUnlock_32x32.png")
'		'Set Custom MapBasic Handle to the button
'		Call RBNControlSetCustomMBXHandlerIdx(nCtrlIdx, "WINHUnlockWindowMenu")
'	End If

	'********************************************************************************
	'A D D I N G    C O N T R O L S    T O    T H E    R I B B O N    -    T A B L E
	'********************************************************************************
	sTabName				= TAB_TABLE
	sGroupName			= TAB_GROUP_TABLE_DATA
	nCtrlIdx = RBNGroupInsertButton("tabBrowserFloating", GetResItemStr("MNU_BROWSER_FLOATING"), "", sTabName, sGroupName, 1)
	If nCtrlIdx > 0 Then
		'Create & Set the button tooltip
		Call RBNControlSetToolTipIdx(nCtrlIdx, PRGIGetApplicationName() & " (Ctrl+Shift+F4)", GetResItemStr("MNU_HLP_BROWSER_FLOATING"), "")
		'Set the button icon
		Call RBNControlSetIconsIdx(nCtrlIdx, CONTROL_SIZE_LARGE, MI_IMG_LAY_NEWBROWSER_16, MI_IMG_LAY_NEWBROWSER_32)
		'Set Custom MapBasic Handle to the button
		Call RBNControlSetCustomMBXHandlerIdx(nCtrlIdx, "WINHBrowserFloating")
		Call RBNControlSetKeyGestureIdx(nCtrlIdx, "Ctrl+Shift+F4")
	End If

	sGroupName			= TAB_GROUP_TABLE_SORTFILTER
	nCtrlIdx = RBNDropDButtonGroupAddControl("tabdbgFilterCellValue", GetResItemStr("MNU_FILTER_USING_CELL_VALUE_SHORT"), ""
				, ControlType_Button, sTabName, sGroupName, "FilterDropDown", "FilterDropDownMenuGroup")
	If nCtrlIdx > 0 Then
		'Create & Set the button tooltip
		Call RBNControlSetToolTipIdx(nCtrlIdx, PRGIGetApplicationName(), GetResItemStr("MNU_HLP_FILTER_USING_CELL_VALUE"), "")
		'Set the button icon
		Call RBNControlSetIconsIdx(nCtrlIdx, CONTROL_SIZE_SMALL, MI_IMG_TAB_FILTER_16, "")
		Call RBNControlSetLeftMarginIdx(nCtrlIdx, 0)
		'Set Custom MapBasic Handle to the button
		Call RBNControlSetCustomMBXHandlerIdx(nCtrlIdx, "MENUFilterBrowserCurrentCell")
	End If


'	GetResItemStr("MNU_SAVE_WINDOW_TO_WOR")							'"Save window to workspace without 'Open table ...' statements"
'		HelpMsg GetResItemStr("MNU_HLP_SAVE_WINDOW_TO_WOR")			'"Saves the active window to a workspace without the 'Open Table ...' statements"
'		Calling WINHSaveWindowToWorkspace,

	'***************************************************************
	'C O N T E X T   M E N U S
	'***************************************************************
	'**Adding a menu item to the Mapper Context menu
	nCtrlIdx = RBNCntxtMenuAddMenuItem(MenuId_MapperShortcut, "mapCntxtMapExtent", GetResItemStr("MNU_CREATE_MAP_EXTENT"), "")
	If nCtrlIdx > 0 Then
		'Create & Set the button tooltip
		Call RBNControlSetToolTipIdx(nCtrlIdx, PRGIGetApplicationName(), GetResItemStr("MNU_HLP_CREATE_MAP_EXTENT"), "")
		'Set the button icon
		Call RBNControlSetIconsIdx(nCtrlIdx, CONTROL_SIZE_SMALL, "", PATH_IMAGES & "MapWindowExtent_24x24.png")
		Call RBNControlSetLeftMarginIdx(nCtrlIdx, 0)
		'Set Custom MapBasic Handle to the button
		Call RBNControlSetCustomMBXHandlerIdx(nCtrlIdx, "MAPEXTCreateMenu")
	End If

	'***************************************************************
	'**Adding a menu item to the Browser Context menu
	nCtrlIdx = RBNCntxtMenuInsertMenuItem(MenuId_BrowserShortcut, "mapCntxtFilterCellValue", GetResItemStr("MNU_FILTER_USING_CELL_VALUE"), "", 4)
	If nCtrlIdx > 0 Then
		'Create & Set the button tooltip
		Call RBNControlSetToolTipIdx(nCtrlIdx, PRGIGetApplicationName(), GetResItemStr("MNU_HLP_FILTER_USING_CELL_VALUE"), "")
		'Set the button icon
		Call RBNControlSetIconsIdx(nCtrlIdx, CONTROL_SIZE_SMALL, MI_IMG_TAB_FILTER_16, "")
		Call RBNControlSetLeftMarginIdx(nCtrlIdx, 0)
		'Set Custom MapBasic Handle to the button
		Call RBNControlSetCustomMBXHandlerIdx(nCtrlIdx, "MENUFilterBrowserCurrentCell")
	End If
	nCtrlIdx = RBNCntxtMenuInsertMenuItem(MenuId_BrowserShortcut, "mapCntxtGroupByColumn", GetResItemStr("MNU_GROUP_BY_CURRENT_COLUMN"), "", 5)
	If nCtrlIdx > 0 Then
		'Create & Set the button tooltip
		Call RBNControlSetToolTipIdx(nCtrlIdx, PRGIGetApplicationName(), GetResItemStr("MNU_HLP_GROUP_BY_CURRENT_COLUMN"), "")
		'Set the button icon
		Call RBNControlSetIconsIdx(nCtrlIdx, CONTROL_SIZE_SMALL, MI_IMG_TAB_FINDMAPSELECTION_16, "")
		Call RBNControlSetLeftMarginIdx(nCtrlIdx, 0)
		'Set Custom MapBasic Handle to the button
		Call RBNControlSetCustomMBXHandlerIdx(nCtrlIdx, "MENUGroupByCurrentColumn")
	End If

	'***************************************************************
	'**Adding a menu item to the Layer Control Maps Context menu
	nCtrlIdx = RBNCntxtMenuAddMenuItem(MenuId_LcMapsShortcut, "lcmCntxtDefaultView", GetResItemStr("MNU_SET_DEFAULT_VIEW_ALL_LAYERS"), "")
	If nCtrlIdx > 0 Then
		'Create & Set the button tooltip
		Call RBNControlSetToolTipIdx(nCtrlIdx, PRGIGetApplicationName(), GetResItemStr("MNU_HLP_SET_DEFAULT_VIEW_ALL_LAYERS"), "")
		'Set the button icon
		Call RBNControlSetIconsIdx(nCtrlIdx, CONTROL_SIZE_SMALL, "", PATH_IMAGES & "DefaultView_24x24.png")
		Call RBNControlSetLeftMarginIdx(nCtrlIdx, 0)
		'Set Custom MapBasic Handle to the button
		Call RBNControlSetCustomMBXHandlerIdx(nCtrlIdx, "WINHSetDefaultViewAllLayers")
	End If
	'**Adding a menu item as the third menu item on the Mapper Context menu
	nCtrlIdx = RBNCntxtMenuInsertMenuItem(MenuId_LcMapsShortcut, "lcmRenameLayers", GetResItemStr("MNU_MULTIPLE_LAYERS_RENAME"), "", 2)
	If nCtrlIdx > 0 Then
		'Create & Set the button tooltip
		Call RBNControlSetToolTipIdx(nCtrlIdx, PRGIGetApplicationName(), GetResItemStr("MNU_HLP_MULTIPLE_LAYERS_RENAME"), "")
		'Set the button icon
		Call RBNControlSetIconsIdx(nCtrlIdx, CONTROL_SIZE_SMALL, MI_IMG_TAB_RENAMETABLE_16, MI_IMG_TAB_RENAMETABLE_32)
		Call RBNControlSetLeftMarginIdx(nCtrlIdx, 0)
		'Set Custom MapBasic Handle to the button
		Call RBNControlSetCustomMBXHandlerIdx(nCtrlIdx, "MAPHRenameMultipleLayersLC")
	End If
	'**Adding a menu item as the fourth menu item on the Mapper Context menu
	nCtrlIdx = RBNCntxtMenuInsertMenuItem(MenuId_LcMapsShortcut, "lcmCloneMap", GetResItemStr("MNU_CLONE_MAP"), "", 3)
	If nCtrlIdx > 0 Then
		'Create & Set the button tooltip
		Call RBNControlSetToolTipIdx(nCtrlIdx, PRGIGetApplicationName(), GetResItemStr("MNU_HLP_CLONE_MAP"), "")
		'Set the button icon
		Call RBNControlSetIconsIdx(nCtrlIdx, CONTROL_SIZE_SMALL, MI_IMG_MAP_CLONEMAP_16, MI_IMG_MAP_CLONEMAP_32)
		Call RBNControlSetLeftMarginIdx(nCtrlIdx, 0)
		'Set Custom MapBasic Handle to the button
		Call RBNControlSetCustomMBXHandlerIdx(nCtrlIdx, "MAPHCloneMapLC")
	End If

	'***************************************************************
	'**Adding a menu item to the Layer Control Layers Context menu
	nCtrlIdx = RBNCntxtMenuAddMenuItem(MenuId_LcLayersShortcut, "lclCntxtDefaultView", GetResItemStr("MNU_CLOSE_TABLE"), "")
	If nCtrlIdx > 0 Then
		'Create & Set the button tooltip
		Call RBNControlSetToolTipIdx(nCtrlIdx, PRGIGetApplicationName(), GetResItemStr("MNU_HLP_CLOSE_TABLE"), "")
		'Set the button icon
		Call RBNControlSetIconsIdx(nCtrlIdx, CONTROL_SIZE_SMALL, "", PATH_IMAGES & "Close Table 24x24.png")
		Call RBNControlSetLeftMarginIdx(nCtrlIdx, 0)
		'Set Custom MapBasic Handle to the button
		Call RBNControlSetCustomMBXHandlerIdx(nCtrlIdx, "TABHCloseTableLC")
	End If
	'**Adding a menu item to the Layer Control Layers Context menu
	nCtrlIdx = RBNCntxtMenuAddMenuItem(MenuId_LcLayersShortcut, "lclCntxtDefaultView", GetResItemStr("MNU_SET_DEFAULT_VIEW_SINGLE_LAYER"), "")
	If nCtrlIdx > 0 Then
		'Create & Set the button tooltip
		Call RBNControlSetToolTipIdx(nCtrlIdx, PRGIGetApplicationName(), GetResItemStr("MNU_HLP_SET_DEFAULT_VIEW_SINGLE_LAYER"), "")
		'Set the button icon
		Call RBNControlSetIconsIdx(nCtrlIdx, CONTROL_SIZE_SMALL, "", PATH_IMAGES & "DefaultView_24x24.png")
		Call RBNControlSetLeftMarginIdx(nCtrlIdx, 0)
		'Set Custom MapBasic Handle to the button
		Call RBNControlSetCustomMBXHandlerIdx(nCtrlIdx, "WINHSetDefaultViewSingleLayer")
	End If
	'**Adding a menu item to the Layer Control Layers Context menu
	nCtrlIdx = RBNCntxtMenuAddMenuItem(MenuId_LcLayersShortcut, "lclCntxtLocateInExplorer", GetResItemStr("MNU_LOCATE_FILE_IN_EXPLORER"), "")
	If nCtrlIdx > 0 Then
		'Create & Set the button tooltip
		Call RBNControlSetToolTipIdx(nCtrlIdx, PRGIGetApplicationName(), GetResItemStr("MNU_HLP_LOCATE_FILE_IN_EXPLORER"), "")
		'Set the button icon
		Call RBNControlSetIconsIdx(nCtrlIdx, CONTROL_SIZE_SMALL, PATH_IMAGES & "Windows Explorer 16x16.png", "")
		Call RBNControlSetLeftMarginIdx(nCtrlIdx, 0)
		'Set Custom MapBasic Handle to the button
		Call RBNControlSetCustomMBXHandlerIdx(nCtrlIdx, "TABHLocateTabFileLC")
	End If

	'**Adding a menu item as the first menu item on the Mapper Context menu
	nCtrlIdx = RBNCntxtMenuInsertMenuItemAfter(MenuId_LcLayersShortcut, "layRenameLayer", GetResItemStr("MNU_ADVANCED_RENAME"), "", "MenuItem_81")
	If nCtrlIdx > 0 Then
		'Create & Set the button tooltip
		Call RBNControlSetToolTipIdx(nCtrlIdx, PRGIGetApplicationName(), GetResItemStr("MNU_HLP_ADVANCED_RENAME"), "")
		'Set the button icon
		Call RBNControlSetIconsIdx(nCtrlIdx, CONTROL_SIZE_SMALL, MI_IMG_TAB_RENAMETABLE_16, MI_IMG_TAB_RENAMETABLE_32)
		Call RBNControlSetLeftMarginIdx(nCtrlIdx, 0)
		'Set Custom MapBasic Handle to the button
		Call RBNControlSetCustomMBXHandlerIdx(nCtrlIdx, "MAPHRenameLayerAdvancedLC")
	End If


	'***************************************************************
	'**Adding a separator to the Table List Context menu
'	nCtrlIdx = RBNCntxtMenuAddMenuItem(MenuId_TableListTablesShortcut, "tlCntxtShowMapperInfo", "(-", "")
	'**Adding a menu item to the Table List Context menu
	nCtrlIdx = RBNCntxtMenuAddMenuItem(MenuId_TableListTablesShortcut, "tlCntxtLocateInExplorer", GetResItemStr("MNU_LOCATE_FILE_IN_EXPLORER"), "")
	If nCtrlIdx > 0 Then
		'Create & Set the button tooltip
		Call RBNControlSetToolTipIdx(nCtrlIdx, PRGIGetApplicationName(), GetResItemStr("MNU_HLP_LOCATE_FILE_IN_EXPLORER"), "")
		'Set the button icon
		Call RBNControlSetIconsIdx(nCtrlIdx, CONTROL_SIZE_SMALL, PATH_IMAGES & "Windows Explorer 16x16.png", "")
		Call RBNControlSetLeftMarginIdx(nCtrlIdx, 0)
		'Set Custom MapBasic Handle to the button
		Call RBNControlSetCustomMBXHandlerIdx(nCtrlIdx, "TABHLocateTabFileTL")
	End If

	'**Adding a menu item to the Table List Context menu
	nCtrlIdx = RBNCntxtMenuInsertMenuItem(MenuId_TableListTablesShortcut, "tlCntxtBrowseFloating", GetResItemStr("MNU_BROWSE_FLOATING_WIN"), "", 2)
	If nCtrlIdx > 0 Then
		'Create & Set the button tooltip
		Call RBNControlSetToolTipIdx(nCtrlIdx, PRGIGetApplicationName(), GetResItemStr("MNU_HLP_BROWSER_FLOATING"), "")
		'Set the button icon
		Call RBNControlSetIconsIdx(nCtrlIdx, CONTROL_SIZE_SMALL, MI_IMG_LAY_NEWBROWSER_16, MI_IMG_LAY_NEWBROWSER_32)
		Call RBNControlSetLeftMarginIdx(nCtrlIdx, 0)
		'Set Custom MapBasic Handle to the button
		Call RBNControlSetCustomMBXHandlerIdx(nCtrlIdx, "TABHBrowserFloatingTL")
	End If

	sTextEditorExe	= SYSFindTextEditor()
	If sTextEditorExe <> "" Then
		sTextEditor 	= PathToFileName$(sTextEditorExe)
		sTextEditor 	= Left$(sTextEditor, Len(sTextEditor) - 4)

		Call TABHSetTextEditor(sTextEditorExe)

		'**Adding a menu item to the Table List Context menu
		nCtrlIdx = RBNCntxtMenuAddMenuItem(MenuId_TableListTablesShortcut, "tlCntxtOpenInTextEditor", GetResItemStr("MNU_OPEN_TABFILE_IN_TEXT_EDITOR") & " " & sTextEditor, "")
		If nCtrlIdx > 0 Then
			'Create & Set the button tooltip
			Call RBNControlSetToolTipIdx(nCtrlIdx, PRGIGetApplicationName(), GetResItemStr("MNU_HLP_OPEN_TABFILE_IN_TEXT_EDITOR"), "")
			'Set the button icon
			Call RBNControlSetIconsIdx(nCtrlIdx, CONTROL_SIZE_SMALL, PATH_IMAGES & "Notepad 16x16.png", "")
			Call RBNControlSetLeftMarginIdx(nCtrlIdx, 0)
			'Set Custom MapBasic Handle to the button
			Call RBNControlSetCustomMBXHandlerIdx(nCtrlIdx, "TABHOpenTabFileTL")
		End If

		'**Adding a menu item to the Layer Control Layer Context menu
		nCtrlIdx = RBNCntxtMenuAddMenuItem(MenuId_LcLayersShortcut, "lclCntxtOpenInTextEditor", GetResItemStr("MNU_OPEN_TABFILE_IN_TEXT_EDITOR") & " " & sTextEditor, "")
		If nCtrlIdx > 0 Then
			'Create & Set the button tooltip
			Call RBNControlSetToolTipIdx(nCtrlIdx, PRGIGetApplicationName(), GetResItemStr("MNU_HLP_OPEN_TABFILE_IN_TEXT_EDITOR"), "")
			'Set the button icon
			Call RBNControlSetIconsIdx(nCtrlIdx, CONTROL_SIZE_SMALL, PATH_IMAGES & "Notepad 16x16.png", "")
			Call RBNControlSetLeftMarginIdx(nCtrlIdx, 0)
			'Set Custom MapBasic Handle to the button
			Call RBNControlSetCustomMBXHandlerIdx(nCtrlIdx, "TABHOpenTabFileLC")
		End If
	End If

	'***************************************************************
	'A P P L I C A T I O N    C O N T E X T    M E N U S
	'***************************************************************

	nCtrlIdx	= RBNToolContextMenuAddMenuItem("showFunctionList", GetResItemStr("MNU_SHOW_MB_FUNCTION_LIST"), "")
	If nCtrlIdx > 0 Then
		'Create & Set the button tooltip
		Call RBNControlSetToolTipIdx(nCtrlIdx, PRGIGetApplicationName(), GetResItemStr("MNU_HLP_SHOW_MB_FUNCTION_LIST"), "")
		'Set the button icon
		Call RBNControlSetIconsIdx(nCtrlIdx, CONTROL_SIZE_SMALL, MI_IMG_APP_RUNMAPBASIC_16, MI_IMG_APP_RUNMAPBASIC_32)
		Call RBNControlSetLeftMarginIdx(nCtrlIdx, 0)
		'Set Custom MapBasic Handle to the button
		Call RBNControlSetCustomMBXHandlerIdx(nCtrlIdx, "DLGExecFunctions")
	End If

	nCtrlIdx	= RBNToolContextMenuAddMenuItem("rateApplication", GetResItemStr("MNU_RATE_APPLICATION"), "")
	If nCtrlIdx > 0 Then
		'Create & Set the button tooltip
		Call RBNControlSetToolTipIdx(nCtrlIdx, PRGIGetApplicationName(), GetResItemStr("MNU_HLP_RATE_APPLICATION"), "")
		'Set the button icon
		Call RBNControlSetIconsIdx(nCtrlIdx, CONTROL_SIZE_SMALL, PATH_IMAGES & "CommunityDownloads_16.png", "")
		Call RBNControlSetLeftMarginIdx(nCtrlIdx, 0)
		'Set Custom MapBasic Handle to the button
		Call RBNControlSetCustomMBXHandlerIdx(nCtrlIdx, "MENUGoToCommunityDownloads")
	End If

	nCtrlIdx	= RBNToolContextMenuAddMenuItem("windowHelperOptions", GetResItemStr("MNU_OPTIONS"), "")
	If nCtrlIdx > 0 Then
		'Create & Set the button tooltip
		Call RBNControlSetToolTipIdx(nCtrlIdx, PRGIGetApplicationName(), GetResItemStr("TTIP_OPTIONS"), "")
		'Set the button icon
		Call RBNControlSetIconsIdx(nCtrlIdx, CONTROL_SIZE_SMALL, MI_IMG_APP_OPTSYSTEMSETTINGS_16, "")
		Call RBNControlSetLeftMarginIdx(nCtrlIdx, 0)
		'Set Custom MapBasic Handle to the button
		Call RBNControlSetCustomMBXHandlerIdx(nCtrlIdx, "MENUOptions")
	End If

	'***************************************************************
	'S T A T U S B A R
	'***************************************************************
	nCtrlIdx = RBNStatusbarAddControl("txtSelectionSize", GetResItemStrReplace("STR_SELECTED_RECORDS_X", FormatNumber$(SelectionInfo(SEL_INFO_NROWS))), ControlType_TextBlock)
	Call SELINFOSetSelInfoNumRowsControlIndex(nCtrlIdx)

	Exit Sub
'-------------------------
ErrorOccured:
	Call ERRCreate(Err(), Error$(), "MENUBuildRibbonInterface")
	Call ERRShow()

End Sub


'****************************************
'**   Created by Peter Horsbøll Møller, Pitney Bowes MapInfo
'**   Ending MapBasic application
'****************************************
Sub EndProgram

OnError GoTo ErrorOccured

	End Program
	Exit Sub
'-------------------------
ErrorOccured:
	Call ERRCreate(Err(), Error$(), "EndProgram")
	Call ERRShow()

End Sub

'**********************************************************************************************''
'Created by Peter Horsbøll Møller, Pitney Bowes Software
'Parameters:
'
'**********************************************************************************************''
Sub MENUGoToCommunityDownloads

OnError GoTo ErrorOccured

	Call FILELaunch("http://communitydownloads.pbinsight.com")
	Exit Sub
'-------------------------
ErrorOccured:
	Call ERRCreate(Err(), Error$(), "MENUGoToCommunityDownloads")
	Call ERRShow()

End Sub

'**********************************************************************************************''
'Created by Peter Horsbøll Møller, Pitney Bowes MapInfo
'Parameters:
'
'**********************************************************************************************''
Sub Endhandler

OnError GoTo ErrorOccured

	Call MENUWriteIniFile

'	Call WHDEndHandler

	If SystemInfo(SYS_INFO_MAPINFO_INTERFACE) = MIINTERFACE_RIBBON Then
		Call RBNEndHandler
	End If

	Exit Sub
'-------------------------
ErrorOccured:
	Call ERRCreate(Err(), Error$(), "Endhandler")
	Call ERRShow()

End Sub

'**********************************************************************************************''
'Created by Peter Horsbøll Møller, Pitney Bowes MapInfo
'Parameters:
'
'**********************************************************************************************''
Sub WinClosedHandler

Dim	nWID As Integer

OnError GoTo ErrorOccured

	Set Event Processing Off
	Set Handler WinClosedHandler Off

	nWID = CommandInfo(CMD_INFO_WIN)
	Call WINHWinClosedHandler(nWID)
	'Call WHDWinClosedHandler(nWID)

	Set Handler WinClosedHandler On
	Set Event Processing On

	Exit Sub
'-------------------------
ErrorOccured:
	Call ERRCreate(Err(), Error$(), "WinClosedHandler")
	Call ERRShow()

End Sub

'**********************************************************************************************''
'Created by Peter Horsbøll Møller, Pitney Bowes MapInfo
'Parameters:
'
'**********************************************************************************************''
Sub WinFocusChangedHandler

Dim	nWID As Integer

OnError GoTo ErrorOccured

	Set Event Processing Off
	Set Handler WinFocusChangedHandler Off

	nWID = CommandInfo(CMD_INFO_WIN)
	Call WINHWinFocusChangedHandler(nWID)
'	Call WHDWinFocusChangedHandler(nWID)

	Set Handler WinFocusChangedHandler On
	Set Event Processing On

	Exit Sub
'-------------------------
ErrorOccured:
	Call ERRCreate(Err(), Error$(), "WinFocusChangedHandler")
	Call ERRShow()

End Sub

'**********************************************************************************************''
'Created by Peter Horsbøll Møller, Pitney Bowes Business Insight
'Parameters:
'
'**********************************************************************************************''
Sub WinChangedHandler

Dim	nWID As Integer

OnError GoTo ErrorOccured

	Set Event Processing Off
	Set Handler WinFocusChangedHandler Off

	nWID = CommandInfo(CMD_INFO_WIN)
	Call WINHWinChangedHandler(nWID)
'	Call WHDWinChangedHandler(nWID)

	Set Handler WinFocusChangedHandler On
	Set Event Processing On

	Exit Sub
'-------------------------
ErrorOccured:
	Call ERRCreate(Err(), Error$(), "WinChangedHandler")
	Call ERRShow()

End Sub

'**********************************************************************************************''
'Created by Peter Horsbøll Møller, Pitney Bowes Software
'Parameters:
'
'**********************************************************************************************''
Sub SelChangedHandler

OnError GoTo ErrorOccured

	Call SELINFOSelChangedHandler
	Exit Sub
'-------------------------
ErrorOccured:
	Call ERRCreate(Err(), Error$(), "SelChangedHandler")
	Call ERRShow()

End Sub

'**********************************************************************************************''
'Created by Peter Horsbøll Møller, Pitney Bowes MapInfo
'Parameters:
'
'**********************************************************************************************''
Sub MENUInitializeMenuItems

OnError GoTo ErrorOccured

	Exit Sub
'-------------------------
ErrorOccured:
	Call ERRCreate(Err(), Error$(), "MENUInitializeMenuItems")
	Call ERRShow()

End Sub

'**********************************************************************************************''
'Created by Peter Horsbøll Møller, Pitney Bowes MapInfo
'Parameters:
'
'**********************************************************************************************''
Sub MENUReadIniFile

Dim	sFile, sState As String

OnError GoTo ErrorOccured

	sFile 	= ApplicationDirectory$() & PathToFileName$(FILE_INI)

	sState	= CONFIGReadKey(sFile, "MAPMINITOOLBAR", "ADDTOOL_INFO")
	Call DLGWHOSetAddInfoToolToMTB(sState <> "0")
	sState	= CONFIGReadKey(sFile, "MAPMINITOOLBAR", "ADDTOOL_RULER")
	Call DLGWHOSetAddRulerToolToMTB(sState <> "0")
	sState	= CONFIGReadKey(sFile, "BROWSERFILTER", "IGNORE_TOPLEFTCELL")
	mbIgnoreTopLeftCell = (sState <> "0")

	If FileExists(FILE_INI) Then
'		msLanguage	= CONFIGReadKey(msIniFile, "SETTINGS", "LANGUAGE")
'		Call DEBUGPrint("Found '" & msLanguage & "' in " & msIniFile)

		sState	= CONFIGReadKey(FILE_INI, "MAPMINITOOLBAR", "ADDTOOL_INFO")
		Call DLGWHOSetAddInfoToolToMTB(sState <> "0")
		sState	= CONFIGReadKey(FILE_INI, "MAPMINITOOLBAR", "ADDTOOL_RULER")
		Call DLGWHOSetAddRulerToolToMTB(sState <> "0")

		sState	= CONFIGReadKey(FILE_INI, "BROWSERFILTER", "IGNORE_TOPLEFTCELL")
		mbIgnoreTopLeftCell = (sState <> "0")
	End If

	Call SELINFOReadConfigFile
	Call WINHReadConfigFile

'	Call WINPReadIniFile(FILE_INI)
'	Call BWINReadIniFile(FILE_INI)

	Exit Sub
'-------------------------
ErrorOccured:
	Call ERRCreate(Err(), Error$(), "MENUReadIniFile")
	Call ERRShow()

End Sub

'**********************************************************************************************''
'Created by Peter Horsbøll Møller, Pitney Bowes MapInfo
'Parameters:
'
'**********************************************************************************************''
Sub MENUWriteIniFile

OnError GoTo ErrorOccured

	Call CONFIGWriteKey(FILE_INI, "MAPMINITOOLBAR", "ADDTOOL_INFO", Int(DLGWHOGetAddInfoToolToMTB()))
	Call CONFIGWriteKey(FILE_INI, "MAPMINITOOLBAR", "ADDTOOL_RULER", Int(DLGWHOGetAddRulerToolToMTB()))

	Call CONFIGWriteKey(FILE_INI, "BROWSERFILTER", "IGNORE_TOPLEFTCELL", Int(mbIgnoreTopLeftCell))

	Call SELINFOWriteConfigFile
	Call WINHWriteConfigFile

'	Call WINPWriteIniFile(FILE_INI)

	Exit Sub
'-------------------------
ErrorOccured:
	Call ERRCreate(Err(), Error$(), "MENUWriteIniFile")
	Call ERRShow()

End Sub

'**********************************************************************************************''
'Created by Peter Horsbøll Møller, Pitney Bowes Software
'Parameters:
'
'**********************************************************************************************''
Sub MENUOptions

OnError GoTo ErrorOccured

	Call DLGWHOSetShowInfoOnDeselect(SELINFOGetShowInfoOnDeselect())

	If DLGWHOWindowHelperOptions() Then

		Call SELINFOSetShowInfoOnDeselect(DLGWHOGetShowInfoOnDeselect())
	End If

	Exit Sub
'-------------------------
ErrorOccured:
	Call ERRCreate(Err(), Error$(), "MENUOptions")
	Call ERRShow()

End Sub

'**********************************************************************************************''
'Created by Peter Horsbøll Møller, Pitney Bowes Software
'Parameters:
'
'**********************************************************************************************''
Sub MENUFilterBrowserCurrentCell

OnError GoTo ErrorOccured

Dim	nWID, nRow, nCol As Integer,
	sTab, sCol, sCmd As String,
	sValue As String,
	fValue As Float,
	nValue As Integer

	nWID = FrontWindow()
	nRow = BrowserInfo(nWID, BROWSER_INFO_CURRENT_ROW)
	nCol = BrowserInfo(nWID, BROWSER_INFO_CURRENT_COLUMN)
	If nRow = 1 AND nCol = 0 AND mbIgnoreTopLeftCell Then
 		Call RBNNotificationShow("WindowHelper", GetResItemStr("ERR_NO_SELECT_SELECTED_TOP_LEFT_CELL_IGNORED"), Notify_Error, 5000)
		Exit Sub
	End If

	sTab	= WindowInfo(nWID, WIN_INFO_TABLE)
	sCol	= ColumnInfo(sTab, "COL" & (nCol + 1), COL_INFO_NAME)

	Do Case ColumnInfo(sTab, sCol, COL_INFO_TYPE)
		Case COL_TYPE_CHAR
			sValue	= BrowserInfo(nWID, BROWSER_INFO_CURRENT_CELL_VALUE)
			sCmd		= "Where (" & sCol & " = " & Chr$(34) & sValue & Chr$(34) & ")"

		Case COL_TYPE_DECIMAL, COL_TYPE_FLOAT
			fValue	= BrowserInfo(nWID, BROWSER_INFO_CURRENT_CELL_VALUE)
			sCmd		= "Where (" & sCol & " = " & DeformatNumber$(Format$(fValue, "#.##########")) & ")"

		Case COL_TYPE_INTEGER, COL_TYPE_SMALLINT
			nValue	= BrowserInfo(nWID, BROWSER_INFO_CURRENT_CELL_VALUE)
			sCmd		= "Where (" & sCol & " = " & Str$(nValue) & ")"

  		Case Else
  			Call RBNNotificationShow("WindowHelper", GetResItemStr("ERR_ONLY_CHAR_AND_NUM_COLS_SUPPORTED"), Notify_Error, 5000)
  			Exit Sub

  	End Case

	sCmd = "Set Browse"
			& " Window " & nWID
			& " Filter " & sCmd
	Call DEBUGPrint(sCmd)
	Run Command sCmd

	Exit Sub
'-------------------------
ErrorOccured:
	Call ERRCreate(Err(), Error$(), "MENUFilterBrowserCurrentCell")
	Call ERRShow()

End Sub

'**********************************************************************************************''
'Created by Peter Horsbøll Møller, Pitney Bowes Software
'Parameters:
'
'**********************************************************************************************''
Sub MENUGroupByCurrentColumn

OnError GoTo ErrorOccured

Dim	nWID, nRow, nCol As Integer,
	sTab, sCol, sCmd As String

	nWID = FrontWindow()
	nRow = BrowserInfo(nWID, BROWSER_INFO_CURRENT_ROW)
	nCol = BrowserInfo(nWID, BROWSER_INFO_CURRENT_COLUMN)
	If nRow = 1 AND nCol = 0 AND mbIgnoreTopLeftCell Then
 		Call RBNNotificationShow("WindowHelper", GetResItemStr("ERR_NO_SELECT_SELECTED_TOP_LEFT_CELL_IGNORED"), Notify_Error, 5000)
		Exit Sub
	End If

	sTab	= WindowInfo(nWID, WIN_INFO_TABLE)
	sCol	= ColumnInfo(sTab, "COL" & (nCol + 1), COL_INFO_NAME)

	sCmd = "Select " & sCol & ", Count(*) " & Chr$(34) & "NumRecords" & Chr$(34)
			& " From " & sTab
			& " Group By " & sCol
			& " Order By " & sCol
			& " Into " & sTab & "_GrpOn_" & sCol & " NoSelect"
	Call DEBUGPrint(sCmd)
	Run Command sCmd
	Browse * From sTab & "_GrpOn_" & sCol Floating

	Exit Sub
'-------------------------
ErrorOccured:
	Call ERRCreate(Err(), Error$(), "MENUGroupByCurrentColumn")
	Call ERRShow()

End Sub
